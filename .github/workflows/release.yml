name: Build and Release

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '21'

      - name: Build with Maven
        run: mvn clean install -B -U

      - name: Find JAR file in universal
        id: find_jar
        run: |
          JAR_FILE=$(find universal/target -maxdepth 1 -name "*.jar" ! -name "original*.jar" | head -n 1)
          echo "JAR_FILE=$JAR_FILE" >> $GITHUB_ENV

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: my-plugin-jar
          path: ${{ env.JAR_FILE }}

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download JAR artifact
        uses: actions/download-artifact@v4
        with:
          name: my-plugin-jar
          path: ./universal/target

      - name: Find JAR file in downloaded artifacts
        id: find_downloaded_jar
        run: |
          JAR_FILE=$(find ./universal/target -maxdepth 1 -name "*.jar" ! -name "original*.jar" | head -n 1)
          echo "JAR_FILE=$JAR_FILE" >> $GITHUB_ENV

      - name: Remove older releases
        uses: dev-drprasad/delete-tag-and-release@v0.2.1
        if: ${{ github.event_name == 'push' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          delete_release: true
          tag_name: dev-build

      - name: Find git version
        id: git-version
        run: echo "id=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: dev-build
          release_name: Release ${{ steps.git-version.outputs.id }}
          draft: false
          prerelease: true

      - name: Upload JAR to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.JAR_FILE }}
          asset_name: CleanStaffChat.jar
          asset_content_type: application/java-archive
